{
  "swagger": "2.0",
  "info": {
    "title": "Clients and Products API",
    "description": "Documentación de la API para gestionar clientes y productos.",
    "version": "1.0.0"
  },
  "host": "https://cse-341-project2-l4kz.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/clients/": {
      "get": {
        "tags": ["Clients"],
        "summary": "Obtener todos los clientes",
        "description": "Devuelve una lista de todos los clientes almacenados.",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Lista de clientes",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Client"
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "post": {
        "tags": ["Clients"],
        "summary": "Crear un nuevo cliente",
        "description": "Crea un nuevo cliente con los datos proporcionados.",
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Cliente creado exitosamente"
          },
          "400": {
            "description": "Solicitud incorrecta"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/clients/{id}": {
      "get": {
        "tags": ["Clients"],
        "summary": "Obtener un cliente por ID",
        "description": "Devuelve los detalles de un cliente específico.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID del cliente"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles del cliente",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          },
          "404": {
            "description": "Cliente no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "put": {
        "tags": ["Clients"],
        "summary": "Actualizar un cliente por ID",
        "description": "Actualiza los datos de un cliente existente.",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID del cliente"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientInput"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Cliente actualizado exitosamente"
          },
          "400": {
            "description": "Solicitud incorrecta"
          },
          "404": {
            "description": "Cliente no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "delete": {
        "tags": ["Clients"],
        "summary": "Eliminar un cliente por ID",
        "description": "Elimina un cliente existente por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID del cliente"
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente eliminado exitosamente"
          },
          "404": {
            "description": "Cliente no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": ["Products"],
        "summary": "Obtener todos los productos",
        "description": "Devuelve una lista de todos los productos almacenados.",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Lista de productos",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Crear un nuevo producto",
        "description": "Crea un nuevo producto con los datos proporcionados.",
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Producto creado exitosamente"
          },
          "400": {
            "description": "Solicitud incorrecta"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Obtener un producto por ID",
        "description": "Devuelve los detalles de un producto específico.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID del producto"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles del producto",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "404": {
            "description": "Producto no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "put": {
        "tags": ["Products"],
        "summary": "Actualizar un producto por ID",
        "description": "Actualiza los datos de un producto existente.",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID del producto"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductInput"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Producto actualizado exitosamente"
          },
          "400": {
            "description": "Solicitud incorrecta"
          },
          "404": {
            "description": "Producto no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Eliminar un producto por ID",
        "description": "Elimina un producto existente por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID del producto"
          }
        ],
        "responses": {
          "200": {
            "description": "Producto eliminado exitosamente"
          },
          "404": {
            "description": "Producto no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    }
  },
  "definitions": {
    "Client": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "60f89c809e2f3c1c7c0a0b1a"
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com"
        },
        "favoriteColor": {
          "type": "string",
          "example": "blue"
        },
        "birthday": {
          "type": "string",
          "example": "1990-01-01"
        }
      },
      "required": ["firstName", "lastName", "email", "favoriteColor", "birthday"]
    },
    "ClientInput": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com"
        },
        "favoriteColor": {
          "type": "string",
          "example": "blue"
        },
        "birthday": {
          "type": "string",
          "example": "1990-01-01"
        }
      },
      "required": ["firstName", "lastName", "email", "favoriteColor", "birthday"]
    },
    "Product": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "60f89c809e2f3c1c7c0a0b1b"
        },
        "name": {
          "type": "string",
          "example": "Laptop"
        },
        "price": {
          "type": "number",
          "example": 1200
        },
        "description": {
          "type": "string",
          "example": "High-performance laptop"
        },
        "category": {
          "type": "string",
          "example": "Electronics"
        }
      },
      "required": ["name", "price", "description", "category"]
    },
    "ProductInput": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Laptop"
        },
        "price": {
          "type": "number",
          "example": 1200
        },
        "description": {
          "type": "string",
          "example": "High-performance laptop"
        },
        "category": {
          "type": "string",
          "example": "Electronics"
        }
      },
      "required": ["name", "price", "description", "category"]
    }
  }
}
